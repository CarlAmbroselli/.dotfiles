function prepare_header {
  # do all substitutions and expansions
  __left=${(e)_left_header}
  __right=${(e)_right_header}
  # remove non-printable color characters to compute length correctly
  _left_width=${#${(S%%)__left//$~__zero/}}
  _right_width=${#${(S%%)__right//$~__zero/}}
  # do prompt related expansions
  _left=${(%)__left}
  _right=${(%)__right}

  _filler_width=$(( $COLUMNS - 1 - $_left_width - $_right_width ))
}


function prepare_compressed_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _cur_dir="[$MATCH]"
    unset MATCH
  else
    _cur_dir="[${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}/${pwd:t}]"
  fi
}

function prepare_full_pwd {
  [[ -w $PWD ]] && _cur_dir='[%d]' || _cur_dir='[%F{red}%d%f]'
}

function prompt_carl_precmd {
  if (( $+functions[python-info] )); then
    python-info
  fi


  # Prepare header line
  prepare_header

  # Format PWD.
  prepare_full_pwd

  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
  fi

  _filler=""
  # fallback to compressed PWD if blocks aren't fitting
  [[ _filler_width -lt 0 ]] && prepare_compressed_pwd && prepare_header
  [[ _filler_width -gt 0 ]] && for x ({0..${_filler_width}}) _filler+=${_separator}
  #echo $COLUMNS $_left_width $_right_width
  #echo $_filler ${#_filler} $_filler_width
  echo ${_left}${_filler}${_right}
}

function battery_charge() {
  if [ -e /bin/batcharge.py ]
  then
    echo `python /bin/batcharge.py`
  else
    echo ''
  fi
}


function prompt_carl_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  success_color='%F{green}'
  failure_color='%F{red}'

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_carl_precmd

  # Use extended color pallete if available.
  if [[ $TERM = *256color* || $TERM = *rxvt* ]]; then
    _prompt_steeef_colors=(
      "%F{81}"  # Turquoise
      "%F{166}" # Orange
      "%F{135}" # Purple
      "%F{161}" # Hotpink
      "%F{118}" # Limegreen
    )
  else
    _prompt_steeef_colors=(
      "%F{cyan}"
      "%F{yellow}"
      "%F{magenta}"
      "%F{red}"
      "%F{green}"
    )
  fi

  # Formats:
  #   %b - branchname
  #   %u - unstagedstr (see below)
  #   %c - stagedstr (see below)
  #   %a - action (e.g. rebase-i)
  #   %R - repository path
  #   %S - path in the repository
  local branch_format="(${_prompt_steeef_colors[1]}%b%f%u%c)"
  local action_format="(${_prompt_steeef_colors[5]}%a%f)"
  local unstaged_format="${_prompt_steeef_colors[2]}●%f"
  local staged_format="${_prompt_steeef_colors[5]}●%f"

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format ':%%B%F{yellow}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{green}✚%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{yellow}⬆%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{yellow}⬇%f%%b'
  zstyle ':prezto:module:git:info:branch' format ':%F{green}%b%f'
  zstyle ':prezto:module:git:info:commit' format ':%F{green}%.7c%f'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{red}✖%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{blue}✱%f%%b'
  zstyle ':prezto:module:git:info:position' format ':%F{red}%p%f'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{magenta}➜%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{cyan}✭%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{yellow}═%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{white}◼%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'prompt' '(%F{blue}git%f$(coalesce "%b" "%p" "%c")%s%A%B%S%a%d%m%r%U%u)'

  # Set python-info parameters.
  zstyle ':prezto:module:python:info:virtualenv' format '(%v)'

  # Pattern listing visual modifiers
  __zero='%([BSUbfksu]|([FB]|){*})'

  # Header blocks
  _time='(%T)'

  [[ -n $SSH_CLIENT ]] && _host='@%F{cyan}%m%f' || _host=''
  _user_host="(%(!.%F{red}%n%f.%F{cyan}%n%f$_host))"

  __git='${git_info:+${(e)git_info[prompt]}}'

  _virtualenv='${python_info[virtualenv]}'

  _separator=' '

  # Define prompts
  _left_header="
${_prompt_steeef_colors[1]}%m%f: ${_prompt_steeef_colors[2]}%~%f  ${__git}"
  _right_header=''"$(battery_charge) ${_time}"
  PROMPT="%(?.${success_color}.${failure_color})→%f "

  #PROMPT="
#$(battery_charge)  [%*]  %~ "'${vcs_info_msg_0_}'"
#"'$python_info[virtualenv]'"%(?.${success_color}.${failure_color})→%f "
  #RPROMPT=''
}

prompt_carl_setup "$@"
